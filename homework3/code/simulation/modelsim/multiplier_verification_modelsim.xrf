vendor_name = ModelSim
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/tester.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/test_mult.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/status.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/seven_segment_led_driver.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/progress.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/gold_mult.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/count16.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/control.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/compare.sv
source_file = 1, C:/Users/sefun/Dev/digital_desgin_2/homework3/code/db/multiplier_verification.cbx.xml
design_name = tester
instance = comp, \progress_a[0]~output , progress_a[0]~output, tester, 1
instance = comp, \progress_a[1]~output , progress_a[1]~output, tester, 1
instance = comp, \progress_a[2]~output , progress_a[2]~output, tester, 1
instance = comp, \progress_a[3]~output , progress_a[3]~output, tester, 1
instance = comp, \progress_a[4]~output , progress_a[4]~output, tester, 1
instance = comp, \progress_a[5]~output , progress_a[5]~output, tester, 1
instance = comp, \progress_a[6]~output , progress_a[6]~output, tester, 1
instance = comp, \progress_a[7]~output , progress_a[7]~output, tester, 1
instance = comp, \progress_b[0]~output , progress_b[0]~output, tester, 1
instance = comp, \progress_b[1]~output , progress_b[1]~output, tester, 1
instance = comp, \progress_b[2]~output , progress_b[2]~output, tester, 1
instance = comp, \progress_b[3]~output , progress_b[3]~output, tester, 1
instance = comp, \progress_b[4]~output , progress_b[4]~output, tester, 1
instance = comp, \progress_b[5]~output , progress_b[5]~output, tester, 1
instance = comp, \progress_b[6]~output , progress_b[6]~output, tester, 1
instance = comp, \progress_b[7]~output , progress_b[7]~output, tester, 1
instance = comp, \status[0]~output , status[0]~output, tester, 1
instance = comp, \status[1]~output , status[1]~output, tester, 1
instance = comp, \status[2]~output , status[2]~output, tester, 1
instance = comp, \status[3]~output , status[3]~output, tester, 1
instance = comp, \status[4]~output , status[4]~output, tester, 1
instance = comp, \status[5]~output , status[5]~output, tester, 1
instance = comp, \status[6]~output , status[6]~output, tester, 1
instance = comp, \status[7]~output , status[7]~output, tester, 1
instance = comp, \seg_a[0]~output , seg_a[0]~output, tester, 1
instance = comp, \seg_a[1]~output , seg_a[1]~output, tester, 1
instance = comp, \seg_a[2]~output , seg_a[2]~output, tester, 1
instance = comp, \seg_a[3]~output , seg_a[3]~output, tester, 1
instance = comp, \seg_a[4]~output , seg_a[4]~output, tester, 1
instance = comp, \seg_a[5]~output , seg_a[5]~output, tester, 1
instance = comp, \seg_a[6]~output , seg_a[6]~output, tester, 1
instance = comp, \seg_b[0]~output , seg_b[0]~output, tester, 1
instance = comp, \seg_b[1]~output , seg_b[1]~output, tester, 1
instance = comp, \seg_b[2]~output , seg_b[2]~output, tester, 1
instance = comp, \seg_b[3]~output , seg_b[3]~output, tester, 1
instance = comp, \seg_b[4]~output , seg_b[4]~output, tester, 1
instance = comp, \seg_b[5]~output , seg_b[5]~output, tester, 1
instance = comp, \seg_b[6]~output , seg_b[6]~output, tester, 1
instance = comp, \clk~input , clk~input, tester, 1
instance = comp, \clk~inputCLKENA0 , clk~inputCLKENA0, tester, 1
instance = comp, \inject_error~input , inject_error~input, tester, 1
instance = comp, \reset_n~input , reset_n~input, tester, 1
instance = comp, \count16_a|Add0~1 , count16_a|Add0~1, tester, 1
instance = comp, \count16_a|Add0~25 , count16_a|Add0~25, tester, 1
instance = comp, \count16_a|count[1] , count16_a|count[1], tester, 1
instance = comp, \count16_a|Add0~21 , count16_a|Add0~21, tester, 1
instance = comp, \count16_a|count[2] , count16_a|count[2], tester, 1
instance = comp, \count16_a|Add0~17 , count16_a|Add0~17, tester, 1
instance = comp, \count16_a|count[3] , count16_a|count[3], tester, 1
instance = comp, \count16_a|Add0~13 , count16_a|Add0~13, tester, 1
instance = comp, \count16_a|count[4] , count16_a|count[4], tester, 1
instance = comp, \count16_a|Add0~9 , count16_a|Add0~9, tester, 1
instance = comp, \count16_a|count[5] , count16_a|count[5], tester, 1
instance = comp, \count16_a|Add0~61 , count16_a|Add0~61, tester, 1
instance = comp, \count16_a|count[6] , count16_a|count[6], tester, 1
instance = comp, \count16_a|Add0~57 , count16_a|Add0~57, tester, 1
instance = comp, \count16_a|count[7] , count16_a|count[7], tester, 1
instance = comp, \count16_a|Add0~53 , count16_a|Add0~53, tester, 1
instance = comp, \count16_a|count[8] , count16_a|count[8], tester, 1
instance = comp, \count16_a|Add0~49 , count16_a|Add0~49, tester, 1
instance = comp, \count16_a|count[9] , count16_a|count[9], tester, 1
instance = comp, \count16_a|Add0~45 , count16_a|Add0~45, tester, 1
instance = comp, \count16_a|count[10] , count16_a|count[10], tester, 1
instance = comp, \count16_a|Add0~5 , count16_a|Add0~5, tester, 1
instance = comp, \count16_a|count[11] , count16_a|count[11], tester, 1
instance = comp, \count16_a|Equal0~0 , count16_a|Equal0~0, tester, 1
instance = comp, \count16_a|Add0~41 , count16_a|Add0~41, tester, 1
instance = comp, \count16_a|count[12] , count16_a|count[12], tester, 1
instance = comp, \count16_a|Add0~37 , count16_a|Add0~37, tester, 1
instance = comp, \count16_a|count[13] , count16_a|count[13], tester, 1
instance = comp, \count16_a|Add0~33 , count16_a|Add0~33, tester, 1
instance = comp, \count16_a|count[14] , count16_a|count[14], tester, 1
instance = comp, \count16_a|Add0~29 , count16_a|Add0~29, tester, 1
instance = comp, \count16_a|count[15] , count16_a|count[15], tester, 1
instance = comp, \count16_a|Equal0~1 , count16_a|Equal0~1, tester, 1
instance = comp, \count16_a|Equal0~2 , count16_a|Equal0~2, tester, 1
instance = comp, \count16_a|count[0]~0 , count16_a|count[0]~0, tester, 1
instance = comp, \count16_a|count[0] , count16_a|count[0], tester, 1
instance = comp, \progress_inst|progress_a~0 , progress_inst|progress_a~0, tester, 1
instance = comp, \progress_inst|progress_a[0]~feeder , progress_inst|progress_a[0]~feeder, tester, 1
instance = comp, \progress_inst|progress_a[0] , progress_inst|progress_a[0], tester, 1
instance = comp, \progress_inst|progress_b[0] , progress_inst|progress_b[0], tester, 1
instance = comp, \begin_test~input , begin_test~input, tester, 1
instance = comp, \status_inst|status~0 , status_inst|status~0, tester, 1
instance = comp, \status_inst|status[0] , status_inst|status[0], tester, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, tester, 1
